name: Load Server Machine Dataset
description: Loads the Server Machine Dataset (SMD) and saves it as a Dataset type.
outputs:
  - {name: smd_data, type: Dataset}
implementation:
  container:
    image: python:3.9
    command:
      - sh
      - -c
      - |
        PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet pandas requests || \
        PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet pandas requests --user
        exec "$0" "$@"
      - python3
      - -u
      - -c
      - |
        import argparse
        import os
        import pickle
        import pandas as pd
        import requests

        parser = argparse.ArgumentParser()
        parser.add_argument('--smd_data', type=str, required=True)
        args = parser.parse_args()

        print(f"[INFO] Loading Server Machine Dataset...")

        # Make sure dataset dir exists
        dataset_dir = "/tmp/smd"
        os.makedirs(dataset_dir, exist_ok=True)

        # Example: download a single machine CSV file (you can expand for all machines)
        url = "https://raw.githubusercontent.com/NetManAIOps/OmniAnomaly/master/ServerMachineDataset/test/1.csv"
        local_path = os.path.join(dataset_dir, "machine1_test.csv")

        if not os.path.exists(local_path):
            r = requests.get(url)
            with open(local_path, "wb") as f:
                f.write(r.content)
            print(f"[INFO] Downloaded dataset to {local_path}")
        else:
            print(f"[INFO] Dataset already exists at {local_path}")

        # Load with pandas
        df = pd.read_csv(local_path)
        print(f"[INFO] Dataset shape = {df.shape}")

        # Save via pickle
        os.makedirs(os.path.dirname(args.smd_data), exist_ok=True)
        with open(args.smd_data, "wb") as f:
            pickle.dump(df, f)

        print(f"[SUCCESS] Saved SMD dataset to {args.smd_data}")

    args:
      - --smd_data
      - {outputPath: smd_data}
